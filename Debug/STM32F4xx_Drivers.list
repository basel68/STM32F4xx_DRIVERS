
STM32F4xx_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008b4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a5c  08000a64  00010a64  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a5c  08000a5c  00010a64  2**0
                  CONTENTS
  4 .ARM          00000000  08000a5c  08000a5c  00010a64  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a5c  08000a64  00010a64  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a5c  08000a5c  00010a5c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a60  08000a60  00010a60  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a64  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010a64  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010a64  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00010a94  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000a8c  00000000  00000000  00010ad7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000002d6  00000000  00000000  00011563  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000000c8  00000000  00000000  00011840  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 0000008c  00000000  00000000  00011908  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00002307  00000000  00000000  00011994  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00001098  00000000  00000000  00013c9b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00008d17  00000000  00000000  00014d33  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000288  00000000  00000000  0001da4c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005f  00000000  00000000  0001dcd4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000a44 	.word	0x08000a44

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000a44 	.word	0x08000a44

080001e8 <GPIO_PeriClockControl>:

#include <STM32F407xx_GPIO_driver.h>
/*
 * Peripheral Clock setup
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi){
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b00      	cmp	r3, #0
 80001f8:	d062      	beq.n	80002c0 <GPIO_PeriClockControl+0xd8>

				if(pGPIOx == GPIOA)
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a64      	ldr	r2, [pc, #400]	; (8000390 <GPIO_PeriClockControl+0x1a8>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d106      	bne.n	8000210 <GPIO_PeriClockControl+0x28>
				{
					GPIOA_PCLK_EN();
 8000202:	4b64      	ldr	r3, [pc, #400]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000206:	4a63      	ldr	r2, [pc, #396]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000208:	f043 0301 	orr.w	r3, r3, #1
 800020c:	6313      	str	r3, [r2, #48]	; 0x30
					}else if (pGPIOx == GPIOI)
					{
						GPIOI_PCLK_DI();
					}
	}
}
 800020e:	e0b9      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOB)
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	4a61      	ldr	r2, [pc, #388]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d106      	bne.n	8000226 <GPIO_PeriClockControl+0x3e>
					GPIOB_PCLK_EN();
 8000218:	4b5e      	ldr	r3, [pc, #376]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800021a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021c:	4a5d      	ldr	r2, [pc, #372]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800021e:	f043 0302 	orr.w	r3, r3, #2
 8000222:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000224:	e0ae      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOC)
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a5c      	ldr	r2, [pc, #368]	; (800039c <GPIO_PeriClockControl+0x1b4>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d106      	bne.n	800023c <GPIO_PeriClockControl+0x54>
					GPIOC_PCLK_EN();
 800022e:	4b59      	ldr	r3, [pc, #356]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000232:	4a58      	ldr	r2, [pc, #352]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000234:	f043 0304 	orr.w	r3, r3, #4
 8000238:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023a:	e0a3      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOD)
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a58      	ldr	r2, [pc, #352]	; (80003a0 <GPIO_PeriClockControl+0x1b8>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d106      	bne.n	8000252 <GPIO_PeriClockControl+0x6a>
					GPIOD_PCLK_EN();
 8000244:	4b53      	ldr	r3, [pc, #332]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000248:	4a52      	ldr	r2, [pc, #328]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800024a:	f043 0308 	orr.w	r3, r3, #8
 800024e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000250:	e098      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOE)
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4a53      	ldr	r2, [pc, #332]	; (80003a4 <GPIO_PeriClockControl+0x1bc>)
 8000256:	4293      	cmp	r3, r2
 8000258:	d106      	bne.n	8000268 <GPIO_PeriClockControl+0x80>
					GPIOE_PCLK_EN();
 800025a:	4b4e      	ldr	r3, [pc, #312]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800025c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025e:	4a4d      	ldr	r2, [pc, #308]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000260:	f043 0310 	orr.w	r3, r3, #16
 8000264:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000266:	e08d      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOF)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a4f      	ldr	r2, [pc, #316]	; (80003a8 <GPIO_PeriClockControl+0x1c0>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d106      	bne.n	800027e <GPIO_PeriClockControl+0x96>
					GPIOF_PCLK_EN();
 8000270:	4b48      	ldr	r3, [pc, #288]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000274:	4a47      	ldr	r2, [pc, #284]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000276:	f043 0320 	orr.w	r3, r3, #32
 800027a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027c:	e082      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOG)
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a4a      	ldr	r2, [pc, #296]	; (80003ac <GPIO_PeriClockControl+0x1c4>)
 8000282:	4293      	cmp	r3, r2
 8000284:	d106      	bne.n	8000294 <GPIO_PeriClockControl+0xac>
					GPIOG_PCLK_EN();
 8000286:	4b43      	ldr	r3, [pc, #268]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028a:	4a42      	ldr	r2, [pc, #264]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800028c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000290:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000292:	e077      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOH)
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4a46      	ldr	r2, [pc, #280]	; (80003b0 <GPIO_PeriClockControl+0x1c8>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d106      	bne.n	80002aa <GPIO_PeriClockControl+0xc2>
					GPIOH_PCLK_EN();
 800029c:	4b3d      	ldr	r3, [pc, #244]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800029e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a0:	4a3c      	ldr	r2, [pc, #240]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a8:	e06c      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOI)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a41      	ldr	r2, [pc, #260]	; (80003b4 <GPIO_PeriClockControl+0x1cc>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d168      	bne.n	8000384 <GPIO_PeriClockControl+0x19c>
					GPIOI_PCLK_EN();
 80002b2:	4b38      	ldr	r3, [pc, #224]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b6:	4a37      	ldr	r2, [pc, #220]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002be:	e061      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
					if(pGPIOx == GPIOA)
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4a33      	ldr	r2, [pc, #204]	; (8000390 <GPIO_PeriClockControl+0x1a8>)
 80002c4:	4293      	cmp	r3, r2
 80002c6:	d106      	bne.n	80002d6 <GPIO_PeriClockControl+0xee>
						GPIOA_PCLK_DI();
 80002c8:	4b32      	ldr	r3, [pc, #200]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002cc:	4a31      	ldr	r2, [pc, #196]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002ce:	f023 0301 	bic.w	r3, r3, #1
 80002d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d4:	e056      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
					}else if (pGPIOx == GPIOB)
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	4a2f      	ldr	r2, [pc, #188]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 80002da:	4293      	cmp	r3, r2
 80002dc:	d106      	bne.n	80002ec <GPIO_PeriClockControl+0x104>
						GPIOB_PCLK_DI();
 80002de:	4b2d      	ldr	r3, [pc, #180]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e2:	4a2c      	ldr	r2, [pc, #176]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002e4:	f023 0302 	bic.w	r3, r3, #2
 80002e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ea:	e04b      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
					}else if (pGPIOx == GPIOC)
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	4a2b      	ldr	r2, [pc, #172]	; (800039c <GPIO_PeriClockControl+0x1b4>)
 80002f0:	4293      	cmp	r3, r2
 80002f2:	d106      	bne.n	8000302 <GPIO_PeriClockControl+0x11a>
						GPIOC_PCLK_DI();
 80002f4:	4b27      	ldr	r3, [pc, #156]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f8:	4a26      	ldr	r2, [pc, #152]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002fa:	f023 0304 	bic.w	r3, r3, #4
 80002fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000300:	e040      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
					}else if (pGPIOx == GPIOD)
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a26      	ldr	r2, [pc, #152]	; (80003a0 <GPIO_PeriClockControl+0x1b8>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d106      	bne.n	8000318 <GPIO_PeriClockControl+0x130>
						GPIOD_PCLK_DI();
 800030a:	4b22      	ldr	r3, [pc, #136]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800030c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030e:	4a21      	ldr	r2, [pc, #132]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000310:	f023 0308 	bic.w	r3, r3, #8
 8000314:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000316:	e035      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
					}else if (pGPIOx == GPIOE)
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	4a22      	ldr	r2, [pc, #136]	; (80003a4 <GPIO_PeriClockControl+0x1bc>)
 800031c:	4293      	cmp	r3, r2
 800031e:	d106      	bne.n	800032e <GPIO_PeriClockControl+0x146>
						GPIOE_PCLK_DI();
 8000320:	4b1c      	ldr	r3, [pc, #112]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000322:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000324:	4a1b      	ldr	r2, [pc, #108]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000326:	f023 0310 	bic.w	r3, r3, #16
 800032a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032c:	e02a      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
					}else if (pGPIOx == GPIOF)
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a1d      	ldr	r2, [pc, #116]	; (80003a8 <GPIO_PeriClockControl+0x1c0>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d106      	bne.n	8000344 <GPIO_PeriClockControl+0x15c>
						GPIOF_PCLK_DI();
 8000336:	4b17      	ldr	r3, [pc, #92]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033a:	4a16      	ldr	r2, [pc, #88]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800033c:	f023 0320 	bic.w	r3, r3, #32
 8000340:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000342:	e01f      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
					}else if (pGPIOx == GPIOG)
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	4a19      	ldr	r2, [pc, #100]	; (80003ac <GPIO_PeriClockControl+0x1c4>)
 8000348:	4293      	cmp	r3, r2
 800034a:	d106      	bne.n	800035a <GPIO_PeriClockControl+0x172>
						GPIOG_PCLK_DI();
 800034c:	4b11      	ldr	r3, [pc, #68]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000350:	4a10      	ldr	r2, [pc, #64]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000352:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000356:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000358:	e014      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
					}else if (pGPIOx == GPIOH)
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a14      	ldr	r2, [pc, #80]	; (80003b0 <GPIO_PeriClockControl+0x1c8>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d106      	bne.n	8000370 <GPIO_PeriClockControl+0x188>
						GPIOH_PCLK_DI();
 8000362:	4b0c      	ldr	r3, [pc, #48]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000366:	4a0b      	ldr	r2, [pc, #44]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000368:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800036c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036e:	e009      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
					}else if (pGPIOx == GPIOI)
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4a10      	ldr	r2, [pc, #64]	; (80003b4 <GPIO_PeriClockControl+0x1cc>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d105      	bne.n	8000384 <GPIO_PeriClockControl+0x19c>
						GPIOI_PCLK_DI();
 8000378:	4b06      	ldr	r3, [pc, #24]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800037a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037c:	4a05      	ldr	r2, [pc, #20]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800037e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000382:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000384:	bf00      	nop
 8000386:	370c      	adds	r7, #12
 8000388:	46bd      	mov	sp, r7
 800038a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800038e:	4770      	bx	lr
 8000390:	40020000 	.word	0x40020000
 8000394:	40023800 	.word	0x40023800
 8000398:	40020400 	.word	0x40020400
 800039c:	40020800 	.word	0x40020800
 80003a0:	40020c00 	.word	0x40020c00
 80003a4:	40021000 	.word	0x40021000
 80003a8:	40021400 	.word	0x40021400
 80003ac:	40021800 	.word	0x40021800
 80003b0:	40021c00 	.word	0x40021c00
 80003b4:	40022000 	.word	0x40022000

080003b8 <GPIO_Init>:

/*
 * Init and De-init
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 80003b8:	b580      	push	{r7, lr}
 80003ba:	b086      	sub	sp, #24
 80003bc:	af00      	add	r7, sp, #0
 80003be:	6078      	str	r0, [r7, #4]
		uint32_t temp=0; //temp. register
 80003c0:	2300      	movs	r3, #0
 80003c2:	617b      	str	r3, [r7, #20]

		 //enable the peripheral clock

		 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	2101      	movs	r1, #1
 80003ca:	4618      	mov	r0, r3
 80003cc:	f7ff ff0c 	bl	80001e8 <GPIO_PeriClockControl>

		// configure the mode of gpio pin

		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	795b      	ldrb	r3, [r3, #5]
 80003d4:	2b03      	cmp	r3, #3
 80003d6:	d820      	bhi.n	800041a <GPIO_Init+0x62>
		{
			//the non interrupt mode
			temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	795b      	ldrb	r3, [r3, #5]
 80003dc:	461a      	mov	r2, r3
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	791b      	ldrb	r3, [r3, #4]
 80003e2:	005b      	lsls	r3, r3, #1
 80003e4:	fa02 f303 	lsl.w	r3, r2, r3
 80003e8:	617b      	str	r3, [r7, #20]
			pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	681a      	ldr	r2, [r3, #0]
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	791b      	ldrb	r3, [r3, #4]
 80003f4:	005b      	lsls	r3, r3, #1
 80003f6:	2103      	movs	r1, #3
 80003f8:	fa01 f303 	lsl.w	r3, r1, r3
 80003fc:	43db      	mvns	r3, r3
 80003fe:	4619      	mov	r1, r3
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	400a      	ands	r2, r1
 8000406:	601a      	str	r2, [r3, #0]
			pGPIOHandle->pGPIOx->MODER |= temp; //setting
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	6819      	ldr	r1, [r3, #0]
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	697a      	ldr	r2, [r7, #20]
 8000414:	430a      	orrs	r2, r1
 8000416:	601a      	str	r2, [r3, #0]
 8000418:	e0d0      	b.n	80005bc <GPIO_Init+0x204>
			}
		else{
			if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_FT )
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	795b      	ldrb	r3, [r3, #5]
 800041e:	2b04      	cmp	r3, #4
 8000420:	d117      	bne.n	8000452 <GPIO_Init+0x9a>
					{
						//1. configure the FTSR
						EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000422:	4b4b      	ldr	r3, [pc, #300]	; (8000550 <GPIO_Init+0x198>)
 8000424:	68db      	ldr	r3, [r3, #12]
 8000426:	687a      	ldr	r2, [r7, #4]
 8000428:	7912      	ldrb	r2, [r2, #4]
 800042a:	4611      	mov	r1, r2
 800042c:	2201      	movs	r2, #1
 800042e:	408a      	lsls	r2, r1
 8000430:	4611      	mov	r1, r2
 8000432:	4a47      	ldr	r2, [pc, #284]	; (8000550 <GPIO_Init+0x198>)
 8000434:	430b      	orrs	r3, r1
 8000436:	60d3      	str	r3, [r2, #12]
						//Clear the corresponding RTSR bit
						EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000438:	4b45      	ldr	r3, [pc, #276]	; (8000550 <GPIO_Init+0x198>)
 800043a:	689b      	ldr	r3, [r3, #8]
 800043c:	687a      	ldr	r2, [r7, #4]
 800043e:	7912      	ldrb	r2, [r2, #4]
 8000440:	4611      	mov	r1, r2
 8000442:	2201      	movs	r2, #1
 8000444:	408a      	lsls	r2, r1
 8000446:	43d2      	mvns	r2, r2
 8000448:	4611      	mov	r1, r2
 800044a:	4a41      	ldr	r2, [pc, #260]	; (8000550 <GPIO_Init+0x198>)
 800044c:	400b      	ands	r3, r1
 800044e:	6093      	str	r3, [r2, #8]
 8000450:	e035      	b.n	80004be <GPIO_Init+0x106>

					}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_RT )
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	795b      	ldrb	r3, [r3, #5]
 8000456:	2b05      	cmp	r3, #5
 8000458:	d117      	bne.n	800048a <GPIO_Init+0xd2>
					{
						//1 . configure the RTSR
						EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800045a:	4b3d      	ldr	r3, [pc, #244]	; (8000550 <GPIO_Init+0x198>)
 800045c:	689b      	ldr	r3, [r3, #8]
 800045e:	687a      	ldr	r2, [r7, #4]
 8000460:	7912      	ldrb	r2, [r2, #4]
 8000462:	4611      	mov	r1, r2
 8000464:	2201      	movs	r2, #1
 8000466:	408a      	lsls	r2, r1
 8000468:	4611      	mov	r1, r2
 800046a:	4a39      	ldr	r2, [pc, #228]	; (8000550 <GPIO_Init+0x198>)
 800046c:	430b      	orrs	r3, r1
 800046e:	6093      	str	r3, [r2, #8]
						//Clear the corresponding RTSR bit
						EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000470:	4b37      	ldr	r3, [pc, #220]	; (8000550 <GPIO_Init+0x198>)
 8000472:	68db      	ldr	r3, [r3, #12]
 8000474:	687a      	ldr	r2, [r7, #4]
 8000476:	7912      	ldrb	r2, [r2, #4]
 8000478:	4611      	mov	r1, r2
 800047a:	2201      	movs	r2, #1
 800047c:	408a      	lsls	r2, r1
 800047e:	43d2      	mvns	r2, r2
 8000480:	4611      	mov	r1, r2
 8000482:	4a33      	ldr	r2, [pc, #204]	; (8000550 <GPIO_Init+0x198>)
 8000484:	400b      	ands	r3, r1
 8000486:	60d3      	str	r3, [r2, #12]
 8000488:	e019      	b.n	80004be <GPIO_Init+0x106>

					}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT )
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	795b      	ldrb	r3, [r3, #5]
 800048e:	2b06      	cmp	r3, #6
 8000490:	d115      	bne.n	80004be <GPIO_Init+0x106>
					{
						//1. configure both FTSR and RTSR
						EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000492:	4b2f      	ldr	r3, [pc, #188]	; (8000550 <GPIO_Init+0x198>)
 8000494:	689b      	ldr	r3, [r3, #8]
 8000496:	687a      	ldr	r2, [r7, #4]
 8000498:	7912      	ldrb	r2, [r2, #4]
 800049a:	4611      	mov	r1, r2
 800049c:	2201      	movs	r2, #1
 800049e:	408a      	lsls	r2, r1
 80004a0:	4611      	mov	r1, r2
 80004a2:	4a2b      	ldr	r2, [pc, #172]	; (8000550 <GPIO_Init+0x198>)
 80004a4:	430b      	orrs	r3, r1
 80004a6:	6093      	str	r3, [r2, #8]
						//Clear the corresponding RTSR bit
						EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004a8:	4b29      	ldr	r3, [pc, #164]	; (8000550 <GPIO_Init+0x198>)
 80004aa:	68db      	ldr	r3, [r3, #12]
 80004ac:	687a      	ldr	r2, [r7, #4]
 80004ae:	7912      	ldrb	r2, [r2, #4]
 80004b0:	4611      	mov	r1, r2
 80004b2:	2201      	movs	r2, #1
 80004b4:	408a      	lsls	r2, r1
 80004b6:	4611      	mov	r1, r2
 80004b8:	4a25      	ldr	r2, [pc, #148]	; (8000550 <GPIO_Init+0x198>)
 80004ba:	430b      	orrs	r3, r1
 80004bc:	60d3      	str	r3, [r2, #12]
					}
				//configuring the GPIO port selection in SYSCFG_EXTICR
				uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	791b      	ldrb	r3, [r3, #4]
 80004c2:	089b      	lsrs	r3, r3, #2
 80004c4:	74fb      	strb	r3, [r7, #19]
				uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	791b      	ldrb	r3, [r3, #4]
 80004ca:	f003 0303 	and.w	r3, r3, #3
 80004ce:	74bb      	strb	r3, [r7, #18]
				uint32_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	4a1f      	ldr	r2, [pc, #124]	; (8000554 <GPIO_Init+0x19c>)
 80004d6:	4293      	cmp	r3, r2
 80004d8:	d04e      	beq.n	8000578 <GPIO_Init+0x1c0>
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	4a1e      	ldr	r2, [pc, #120]	; (8000558 <GPIO_Init+0x1a0>)
 80004e0:	4293      	cmp	r3, r2
 80004e2:	d032      	beq.n	800054a <GPIO_Init+0x192>
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	4a1c      	ldr	r2, [pc, #112]	; (800055c <GPIO_Init+0x1a4>)
 80004ea:	4293      	cmp	r3, r2
 80004ec:	d02b      	beq.n	8000546 <GPIO_Init+0x18e>
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	4a1b      	ldr	r2, [pc, #108]	; (8000560 <GPIO_Init+0x1a8>)
 80004f4:	4293      	cmp	r3, r2
 80004f6:	d024      	beq.n	8000542 <GPIO_Init+0x18a>
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	4a19      	ldr	r2, [pc, #100]	; (8000564 <GPIO_Init+0x1ac>)
 80004fe:	4293      	cmp	r3, r2
 8000500:	d01d      	beq.n	800053e <GPIO_Init+0x186>
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	4a18      	ldr	r2, [pc, #96]	; (8000568 <GPIO_Init+0x1b0>)
 8000508:	4293      	cmp	r3, r2
 800050a:	d016      	beq.n	800053a <GPIO_Init+0x182>
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	4a16      	ldr	r2, [pc, #88]	; (800056c <GPIO_Init+0x1b4>)
 8000512:	4293      	cmp	r3, r2
 8000514:	d00f      	beq.n	8000536 <GPIO_Init+0x17e>
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	4a15      	ldr	r2, [pc, #84]	; (8000570 <GPIO_Init+0x1b8>)
 800051c:	4293      	cmp	r3, r2
 800051e:	d008      	beq.n	8000532 <GPIO_Init+0x17a>
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	4a13      	ldr	r2, [pc, #76]	; (8000574 <GPIO_Init+0x1bc>)
 8000526:	4293      	cmp	r3, r2
 8000528:	d101      	bne.n	800052e <GPIO_Init+0x176>
 800052a:	2308      	movs	r3, #8
 800052c:	e025      	b.n	800057a <GPIO_Init+0x1c2>
 800052e:	2300      	movs	r3, #0
 8000530:	e023      	b.n	800057a <GPIO_Init+0x1c2>
 8000532:	2307      	movs	r3, #7
 8000534:	e021      	b.n	800057a <GPIO_Init+0x1c2>
 8000536:	2306      	movs	r3, #6
 8000538:	e01f      	b.n	800057a <GPIO_Init+0x1c2>
 800053a:	2305      	movs	r3, #5
 800053c:	e01d      	b.n	800057a <GPIO_Init+0x1c2>
 800053e:	2304      	movs	r3, #4
 8000540:	e01b      	b.n	800057a <GPIO_Init+0x1c2>
 8000542:	2303      	movs	r3, #3
 8000544:	e019      	b.n	800057a <GPIO_Init+0x1c2>
 8000546:	2302      	movs	r3, #2
 8000548:	e017      	b.n	800057a <GPIO_Init+0x1c2>
 800054a:	2301      	movs	r3, #1
 800054c:	e015      	b.n	800057a <GPIO_Init+0x1c2>
 800054e:	bf00      	nop
 8000550:	40013c00 	.word	0x40013c00
 8000554:	40020000 	.word	0x40020000
 8000558:	40020400 	.word	0x40020400
 800055c:	40020800 	.word	0x40020800
 8000560:	40020c00 	.word	0x40020c00
 8000564:	40021000 	.word	0x40021000
 8000568:	40021400 	.word	0x40021400
 800056c:	40021800 	.word	0x40021800
 8000570:	40021c00 	.word	0x40021c00
 8000574:	40022000 	.word	0x40022000
 8000578:	2300      	movs	r3, #0
 800057a:	60fb      	str	r3, [r7, #12]
				SYSCFG_PCLK_EN();
 800057c:	4b5b      	ldr	r3, [pc, #364]	; (80006ec <GPIO_Init+0x334>)
 800057e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000580:	4a5a      	ldr	r2, [pc, #360]	; (80006ec <GPIO_Init+0x334>)
 8000582:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000586:	6453      	str	r3, [r2, #68]	; 0x44
				SYSCFG->EXTICR[temp1] |= portcode << ( temp2 * 4);
 8000588:	4a59      	ldr	r2, [pc, #356]	; (80006f0 <GPIO_Init+0x338>)
 800058a:	7cfb      	ldrb	r3, [r7, #19]
 800058c:	3302      	adds	r3, #2
 800058e:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8000592:	7cbb      	ldrb	r3, [r7, #18]
 8000594:	009b      	lsls	r3, r3, #2
 8000596:	68fa      	ldr	r2, [r7, #12]
 8000598:	409a      	lsls	r2, r3
 800059a:	4855      	ldr	r0, [pc, #340]	; (80006f0 <GPIO_Init+0x338>)
 800059c:	7cfb      	ldrb	r3, [r7, #19]
 800059e:	430a      	orrs	r2, r1
 80005a0:	3302      	adds	r3, #2
 80005a2:	f840 2023 	str.w	r2, [r0, r3, lsl #2]

				// enabling the exti interrupt delivery using IMR
				EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80005a6:	4b53      	ldr	r3, [pc, #332]	; (80006f4 <GPIO_Init+0x33c>)
 80005a8:	681b      	ldr	r3, [r3, #0]
 80005aa:	687a      	ldr	r2, [r7, #4]
 80005ac:	7912      	ldrb	r2, [r2, #4]
 80005ae:	4611      	mov	r1, r2
 80005b0:	2201      	movs	r2, #1
 80005b2:	408a      	lsls	r2, r1
 80005b4:	4611      	mov	r1, r2
 80005b6:	4a4f      	ldr	r2, [pc, #316]	; (80006f4 <GPIO_Init+0x33c>)
 80005b8:	430b      	orrs	r3, r1
 80005ba:	6013      	str	r3, [r2, #0]
		}
		// configure the speed
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	799b      	ldrb	r3, [r3, #6]
 80005c0:	461a      	mov	r2, r3
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	791b      	ldrb	r3, [r3, #4]
 80005c6:	005b      	lsls	r3, r3, #1
 80005c8:	fa02 f303 	lsl.w	r3, r2, r3
 80005cc:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	689a      	ldr	r2, [r3, #8]
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	791b      	ldrb	r3, [r3, #4]
 80005d8:	005b      	lsls	r3, r3, #1
 80005da:	2103      	movs	r1, #3
 80005dc:	fa01 f303 	lsl.w	r3, r1, r3
 80005e0:	43db      	mvns	r3, r3
 80005e2:	4619      	mov	r1, r3
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	400a      	ands	r2, r1
 80005ea:	609a      	str	r2, [r3, #8]
		pGPIOHandle->pGPIOx->OSPEEDR |= temp; //setting
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	6899      	ldr	r1, [r3, #8]
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	681b      	ldr	r3, [r3, #0]
 80005f6:	697a      	ldr	r2, [r7, #20]
 80005f8:	430a      	orrs	r2, r1
 80005fa:	609a      	str	r2, [r3, #8]

	    //configure the pupd settings
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	79db      	ldrb	r3, [r3, #7]
 8000600:	461a      	mov	r2, r3
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	791b      	ldrb	r3, [r3, #4]
 8000606:	005b      	lsls	r3, r3, #1
 8000608:	fa02 f303 	lsl.w	r3, r2, r3
 800060c:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	68da      	ldr	r2, [r3, #12]
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	791b      	ldrb	r3, [r3, #4]
 8000618:	005b      	lsls	r3, r3, #1
 800061a:	2103      	movs	r1, #3
 800061c:	fa01 f303 	lsl.w	r3, r1, r3
 8000620:	43db      	mvns	r3, r3
 8000622:	4619      	mov	r1, r3
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	400a      	ands	r2, r1
 800062a:	60da      	str	r2, [r3, #12]
		pGPIOHandle->pGPIOx->PUPDR |= temp;
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	68d9      	ldr	r1, [r3, #12]
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	681b      	ldr	r3, [r3, #0]
 8000636:	697a      	ldr	r2, [r7, #20]
 8000638:	430a      	orrs	r2, r1
 800063a:	60da      	str	r2, [r3, #12]

		//configure the optype
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 800063c:	687b      	ldr	r3, [r7, #4]
 800063e:	7a1b      	ldrb	r3, [r3, #8]
 8000640:	461a      	mov	r2, r3
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	791b      	ldrb	r3, [r3, #4]
 8000646:	fa02 f303 	lsl.w	r3, r2, r3
 800064a:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	685a      	ldr	r2, [r3, #4]
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	791b      	ldrb	r3, [r3, #4]
 8000656:	4619      	mov	r1, r3
 8000658:	2301      	movs	r3, #1
 800065a:	408b      	lsls	r3, r1
 800065c:	43db      	mvns	r3, r3
 800065e:	4619      	mov	r1, r3
 8000660:	687b      	ldr	r3, [r7, #4]
 8000662:	681b      	ldr	r3, [r3, #0]
 8000664:	400a      	ands	r2, r1
 8000666:	605a      	str	r2, [r3, #4]
		pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	6859      	ldr	r1, [r3, #4]
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	681b      	ldr	r3, [r3, #0]
 8000672:	697a      	ldr	r2, [r7, #20]
 8000674:	430a      	orrs	r2, r1
 8000676:	605a      	str	r2, [r3, #4]
	    //configure the alt functionality
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	795b      	ldrb	r3, [r3, #5]
 800067c:	2b02      	cmp	r3, #2
 800067e:	d131      	bne.n	80006e4 <GPIO_Init+0x32c>
		{
			//configure the alt function registers.
			uint8_t temp1, temp2;

			temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	791b      	ldrb	r3, [r3, #4]
 8000684:	08db      	lsrs	r3, r3, #3
 8000686:	72fb      	strb	r3, [r7, #11]
			temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	791b      	ldrb	r3, [r3, #4]
 800068c:	f003 0307 	and.w	r3, r3, #7
 8000690:	72bb      	strb	r3, [r7, #10]
			pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	7afa      	ldrb	r2, [r7, #11]
 8000698:	3208      	adds	r2, #8
 800069a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800069e:	7abb      	ldrb	r3, [r7, #10]
 80006a0:	009b      	lsls	r3, r3, #2
 80006a2:	220f      	movs	r2, #15
 80006a4:	fa02 f303 	lsl.w	r3, r2, r3
 80006a8:	43db      	mvns	r3, r3
 80006aa:	4618      	mov	r0, r3
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	7afa      	ldrb	r2, [r7, #11]
 80006b2:	4001      	ands	r1, r0
 80006b4:	3208      	adds	r2, #8
 80006b6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
			pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	681b      	ldr	r3, [r3, #0]
 80006be:	7afa      	ldrb	r2, [r7, #11]
 80006c0:	3208      	adds	r2, #8
 80006c2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	7a5b      	ldrb	r3, [r3, #9]
 80006ca:	461a      	mov	r2, r3
 80006cc:	7abb      	ldrb	r3, [r7, #10]
 80006ce:	009b      	lsls	r3, r3, #2
 80006d0:	fa02 f303 	lsl.w	r3, r2, r3
 80006d4:	4618      	mov	r0, r3
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	7afa      	ldrb	r2, [r7, #11]
 80006dc:	4301      	orrs	r1, r0
 80006de:	3208      	adds	r2, #8
 80006e0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		}
}
 80006e4:	bf00      	nop
 80006e6:	3718      	adds	r7, #24
 80006e8:	46bd      	mov	sp, r7
 80006ea:	bd80      	pop	{r7, pc}
 80006ec:	40023800 	.word	0x40023800
 80006f0:	40013800 	.word	0x40013800
 80006f4:	40013c00 	.word	0x40013c00

080006f8 <GPIO_ToggleOutputPin>:

}
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value){
	pGPIOx->ODR =Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 80006f8:	b480      	push	{r7}
 80006fa:	b083      	sub	sp, #12
 80006fc:	af00      	add	r7, sp, #0
 80006fe:	6078      	str	r0, [r7, #4]
 8000700:	460b      	mov	r3, r1
 8000702:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^=(1<<PinNumber);
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	695b      	ldr	r3, [r3, #20]
 8000708:	78fa      	ldrb	r2, [r7, #3]
 800070a:	2101      	movs	r1, #1
 800070c:	fa01 f202 	lsl.w	r2, r1, r2
 8000710:	405a      	eors	r2, r3
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	615a      	str	r2, [r3, #20]
}
 8000716:	bf00      	nop
 8000718:	370c      	adds	r7, #12
 800071a:	46bd      	mov	sp, r7
 800071c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000720:	4770      	bx	lr
	...

08000724 <GPIO_IRQInterruptConfig>:

/*
 * IRQ Configuration and ISR handling
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000724:	b480      	push	{r7}
 8000726:	b083      	sub	sp, #12
 8000728:	af00      	add	r7, sp, #0
 800072a:	4603      	mov	r3, r0
 800072c:	460a      	mov	r2, r1
 800072e:	71fb      	strb	r3, [r7, #7]
 8000730:	4613      	mov	r3, r2
 8000732:	71bb      	strb	r3, [r7, #6]

	if(EnorDi == ENABLE)
 8000734:	79bb      	ldrb	r3, [r7, #6]
 8000736:	2b01      	cmp	r3, #1
 8000738:	d133      	bne.n	80007a2 <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <= 31)
 800073a:	79fb      	ldrb	r3, [r7, #7]
 800073c:	2b1f      	cmp	r3, #31
 800073e:	d80a      	bhi.n	8000756 <GPIO_IRQInterruptConfig+0x32>
		{
			//program ISER0 register
			*NVIC_ISER0 |= ( 1 << IRQNumber );
 8000740:	4b35      	ldr	r3, [pc, #212]	; (8000818 <GPIO_IRQInterruptConfig+0xf4>)
 8000742:	681b      	ldr	r3, [r3, #0]
 8000744:	79fa      	ldrb	r2, [r7, #7]
 8000746:	2101      	movs	r1, #1
 8000748:	fa01 f202 	lsl.w	r2, r1, r2
 800074c:	4611      	mov	r1, r2
 800074e:	4a32      	ldr	r2, [pc, #200]	; (8000818 <GPIO_IRQInterruptConfig+0xf4>)
 8000750:	430b      	orrs	r3, r1
 8000752:	6013      	str	r3, [r2, #0]
			//program ICER2 register
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
		}
	}

}
 8000754:	e059      	b.n	800080a <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64 ) //32 to 63
 8000756:	79fb      	ldrb	r3, [r7, #7]
 8000758:	2b1f      	cmp	r3, #31
 800075a:	d90f      	bls.n	800077c <GPIO_IRQInterruptConfig+0x58>
 800075c:	79fb      	ldrb	r3, [r7, #7]
 800075e:	2b3f      	cmp	r3, #63	; 0x3f
 8000760:	d80c      	bhi.n	800077c <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= ( 1 << (IRQNumber % 32) );
 8000762:	4b2e      	ldr	r3, [pc, #184]	; (800081c <GPIO_IRQInterruptConfig+0xf8>)
 8000764:	681b      	ldr	r3, [r3, #0]
 8000766:	79fa      	ldrb	r2, [r7, #7]
 8000768:	f002 021f 	and.w	r2, r2, #31
 800076c:	2101      	movs	r1, #1
 800076e:	fa01 f202 	lsl.w	r2, r1, r2
 8000772:	4611      	mov	r1, r2
 8000774:	4a29      	ldr	r2, [pc, #164]	; (800081c <GPIO_IRQInterruptConfig+0xf8>)
 8000776:	430b      	orrs	r3, r1
 8000778:	6013      	str	r3, [r2, #0]
 800077a:	e046      	b.n	800080a <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96 )
 800077c:	79fb      	ldrb	r3, [r7, #7]
 800077e:	2b3f      	cmp	r3, #63	; 0x3f
 8000780:	d943      	bls.n	800080a <GPIO_IRQInterruptConfig+0xe6>
 8000782:	79fb      	ldrb	r3, [r7, #7]
 8000784:	2b5f      	cmp	r3, #95	; 0x5f
 8000786:	d840      	bhi.n	800080a <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= ( 1 << (IRQNumber % 64) );
 8000788:	4b25      	ldr	r3, [pc, #148]	; (8000820 <GPIO_IRQInterruptConfig+0xfc>)
 800078a:	681b      	ldr	r3, [r3, #0]
 800078c:	79fa      	ldrb	r2, [r7, #7]
 800078e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000792:	2101      	movs	r1, #1
 8000794:	fa01 f202 	lsl.w	r2, r1, r2
 8000798:	4611      	mov	r1, r2
 800079a:	4a21      	ldr	r2, [pc, #132]	; (8000820 <GPIO_IRQInterruptConfig+0xfc>)
 800079c:	430b      	orrs	r3, r1
 800079e:	6013      	str	r3, [r2, #0]
}
 80007a0:	e033      	b.n	800080a <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31)
 80007a2:	79fb      	ldrb	r3, [r7, #7]
 80007a4:	2b1f      	cmp	r3, #31
 80007a6:	d80a      	bhi.n	80007be <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= ( 1 << IRQNumber );
 80007a8:	4b1e      	ldr	r3, [pc, #120]	; (8000824 <GPIO_IRQInterruptConfig+0x100>)
 80007aa:	681b      	ldr	r3, [r3, #0]
 80007ac:	79fa      	ldrb	r2, [r7, #7]
 80007ae:	2101      	movs	r1, #1
 80007b0:	fa01 f202 	lsl.w	r2, r1, r2
 80007b4:	4611      	mov	r1, r2
 80007b6:	4a1b      	ldr	r2, [pc, #108]	; (8000824 <GPIO_IRQInterruptConfig+0x100>)
 80007b8:	430b      	orrs	r3, r1
 80007ba:	6013      	str	r3, [r2, #0]
}
 80007bc:	e025      	b.n	800080a <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64 )
 80007be:	79fb      	ldrb	r3, [r7, #7]
 80007c0:	2b1f      	cmp	r3, #31
 80007c2:	d90f      	bls.n	80007e4 <GPIO_IRQInterruptConfig+0xc0>
 80007c4:	79fb      	ldrb	r3, [r7, #7]
 80007c6:	2b3f      	cmp	r3, #63	; 0x3f
 80007c8:	d80c      	bhi.n	80007e4 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= ( 1 << (IRQNumber % 32) );
 80007ca:	4b17      	ldr	r3, [pc, #92]	; (8000828 <GPIO_IRQInterruptConfig+0x104>)
 80007cc:	681b      	ldr	r3, [r3, #0]
 80007ce:	79fa      	ldrb	r2, [r7, #7]
 80007d0:	f002 021f 	and.w	r2, r2, #31
 80007d4:	2101      	movs	r1, #1
 80007d6:	fa01 f202 	lsl.w	r2, r1, r2
 80007da:	4611      	mov	r1, r2
 80007dc:	4a12      	ldr	r2, [pc, #72]	; (8000828 <GPIO_IRQInterruptConfig+0x104>)
 80007de:	430b      	orrs	r3, r1
 80007e0:	6013      	str	r3, [r2, #0]
 80007e2:	e012      	b.n	800080a <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96 )
 80007e4:	79fb      	ldrb	r3, [r7, #7]
 80007e6:	2b3f      	cmp	r3, #63	; 0x3f
 80007e8:	d90f      	bls.n	800080a <GPIO_IRQInterruptConfig+0xe6>
 80007ea:	79fb      	ldrb	r3, [r7, #7]
 80007ec:	2b5f      	cmp	r3, #95	; 0x5f
 80007ee:	d80c      	bhi.n	800080a <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
 80007f0:	4b0e      	ldr	r3, [pc, #56]	; (800082c <GPIO_IRQInterruptConfig+0x108>)
 80007f2:	681b      	ldr	r3, [r3, #0]
 80007f4:	79fa      	ldrb	r2, [r7, #7]
 80007f6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80007fa:	2101      	movs	r1, #1
 80007fc:	fa01 f202 	lsl.w	r2, r1, r2
 8000800:	4611      	mov	r1, r2
 8000802:	4a0a      	ldr	r2, [pc, #40]	; (800082c <GPIO_IRQInterruptConfig+0x108>)
 8000804:	430b      	orrs	r3, r1
 8000806:	6013      	str	r3, [r2, #0]
}
 8000808:	e7ff      	b.n	800080a <GPIO_IRQInterruptConfig+0xe6>
 800080a:	bf00      	nop
 800080c:	370c      	adds	r7, #12
 800080e:	46bd      	mov	sp, r7
 8000810:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000814:	4770      	bx	lr
 8000816:	bf00      	nop
 8000818:	e000e100 	.word	0xe000e100
 800081c:	e000e104 	.word	0xe000e104
 8000820:	e000e108 	.word	0xe000e108
 8000824:	e000e180 	.word	0xe000e180
 8000828:	e000e184 	.word	0xe000e184
 800082c:	e000e188 	.word	0xe000e188

08000830 <GPIO_IRQPriorityConfig>:
void GPIO_IRQPriorityConfig(uint8_t IRQNumber,uint32_t IRQPriority)
{
 8000830:	b480      	push	{r7}
 8000832:	b085      	sub	sp, #20
 8000834:	af00      	add	r7, sp, #0
 8000836:	4603      	mov	r3, r0
 8000838:	6039      	str	r1, [r7, #0]
 800083a:	71fb      	strb	r3, [r7, #7]
	//getting the ipr register
	uint8_t iprx = IRQNumber / 4;
 800083c:	79fb      	ldrb	r3, [r7, #7]
 800083e:	089b      	lsrs	r3, r3, #2
 8000840:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section  = IRQNumber %4 ;
 8000842:	79fb      	ldrb	r3, [r7, #7]
 8000844:	f003 0303 	and.w	r3, r3, #3
 8000848:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = ( 8 * iprx_section) + ( 8 - NO_PR_BITS_IMPLEMENTED) ;
 800084a:	7bbb      	ldrb	r3, [r7, #14]
 800084c:	00db      	lsls	r3, r3, #3
 800084e:	b2db      	uxtb	r3, r3
 8000850:	3304      	adds	r3, #4
 8000852:	737b      	strb	r3, [r7, #13]

	*(  NVIC_PR_BASE_ADDR + iprx ) |=  ( IRQPriority << shift_amount );
 8000854:	7bfb      	ldrb	r3, [r7, #15]
 8000856:	009b      	lsls	r3, r3, #2
 8000858:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800085c:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000860:	6819      	ldr	r1, [r3, #0]
 8000862:	7b7b      	ldrb	r3, [r7, #13]
 8000864:	683a      	ldr	r2, [r7, #0]
 8000866:	409a      	lsls	r2, r3
 8000868:	7bfb      	ldrb	r3, [r7, #15]
 800086a:	009b      	lsls	r3, r3, #2
 800086c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000870:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000874:	430a      	orrs	r2, r1
 8000876:	601a      	str	r2, [r3, #0]

}
 8000878:	bf00      	nop
 800087a:	3714      	adds	r7, #20
 800087c:	46bd      	mov	sp, r7
 800087e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000882:	4770      	bx	lr

08000884 <GPIO_IRQHandling>:
void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000884:	b480      	push	{r7}
 8000886:	b083      	sub	sp, #12
 8000888:	af00      	add	r7, sp, #0
 800088a:	4603      	mov	r3, r0
 800088c:	71fb      	strb	r3, [r7, #7]
	//clearing the exti pr register corresponding to the pin number
	if(EXTI->PR & ( 1 << PinNumber))
 800088e:	4b0c      	ldr	r3, [pc, #48]	; (80008c0 <GPIO_IRQHandling+0x3c>)
 8000890:	695b      	ldr	r3, [r3, #20]
 8000892:	79fa      	ldrb	r2, [r7, #7]
 8000894:	2101      	movs	r1, #1
 8000896:	fa01 f202 	lsl.w	r2, r1, r2
 800089a:	4013      	ands	r3, r2
 800089c:	2b00      	cmp	r3, #0
 800089e:	d009      	beq.n	80008b4 <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= ( 1 << PinNumber);
 80008a0:	4b07      	ldr	r3, [pc, #28]	; (80008c0 <GPIO_IRQHandling+0x3c>)
 80008a2:	695b      	ldr	r3, [r3, #20]
 80008a4:	79fa      	ldrb	r2, [r7, #7]
 80008a6:	2101      	movs	r1, #1
 80008a8:	fa01 f202 	lsl.w	r2, r1, r2
 80008ac:	4611      	mov	r1, r2
 80008ae:	4a04      	ldr	r2, [pc, #16]	; (80008c0 <GPIO_IRQHandling+0x3c>)
 80008b0:	430b      	orrs	r3, r1
 80008b2:	6153      	str	r3, [r2, #20]
	}

}
 80008b4:	bf00      	nop
 80008b6:	370c      	adds	r7, #12
 80008b8:	46bd      	mov	sp, r7
 80008ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008be:	4770      	bx	lr
 80008c0:	40013c00 	.word	0x40013c00

080008c4 <delay>:
#include "STM32F407xx.h"
#include <string.h>
#include <stdint.h>

void delay(void)
{
 80008c4:	b480      	push	{r7}
 80008c6:	b083      	sub	sp, #12
 80008c8:	af00      	add	r7, sp, #0
	for(uint32_t i = 0 ; i < 500000 ; i ++);
 80008ca:	2300      	movs	r3, #0
 80008cc:	607b      	str	r3, [r7, #4]
 80008ce:	e002      	b.n	80008d6 <delay+0x12>
 80008d0:	687b      	ldr	r3, [r7, #4]
 80008d2:	3301      	adds	r3, #1
 80008d4:	607b      	str	r3, [r7, #4]
 80008d6:	687b      	ldr	r3, [r7, #4]
 80008d8:	4a04      	ldr	r2, [pc, #16]	; (80008ec <delay+0x28>)
 80008da:	4293      	cmp	r3, r2
 80008dc:	d9f8      	bls.n	80008d0 <delay+0xc>
}
 80008de:	bf00      	nop
 80008e0:	bf00      	nop
 80008e2:	370c      	adds	r7, #12
 80008e4:	46bd      	mov	sp, r7
 80008e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008ea:	4770      	bx	lr
 80008ec:	0007a11f 	.word	0x0007a11f

080008f0 <main>:


int main(void)
{
 80008f0:	b580      	push	{r7, lr}
 80008f2:	b086      	sub	sp, #24
 80008f4:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, Gpiobutton;
	memset(&GpioLed,0,sizeof(GpioLed));
 80008f6:	f107 030c 	add.w	r3, r7, #12
 80008fa:	220c      	movs	r2, #12
 80008fc:	2100      	movs	r1, #0
 80008fe:	4618      	mov	r0, r3
 8000900:	f000 f873 	bl	80009ea <memset>
	memset(&Gpiobutton,0,sizeof(Gpiobutton));
 8000904:	463b      	mov	r3, r7
 8000906:	220c      	movs	r2, #12
 8000908:	2100      	movs	r1, #0
 800090a:	4618      	mov	r0, r3
 800090c:	f000 f86d 	bl	80009ea <memset>
	GpioLed.pGPIOx = GPIOD;
 8000910:	4b17      	ldr	r3, [pc, #92]	; (8000970 <main+0x80>)
 8000912:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000914:	230c      	movs	r3, #12
 8000916:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000918:	2301      	movs	r3, #1
 800091a:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800091c:	2302      	movs	r3, #2
 800091e:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000920:	2300      	movs	r3, #0
 8000922:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000924:	2300      	movs	r3, #0
 8000926:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOD,ENABLE);
 8000928:	2101      	movs	r1, #1
 800092a:	4811      	ldr	r0, [pc, #68]	; (8000970 <main+0x80>)
 800092c:	f7ff fc5c 	bl	80001e8 <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 8000930:	f107 030c 	add.w	r3, r7, #12
 8000934:	4618      	mov	r0, r3
 8000936:	f7ff fd3f 	bl	80003b8 <GPIO_Init>

	Gpiobutton.pGPIOx = GPIOA;
 800093a:	4b0e      	ldr	r3, [pc, #56]	; (8000974 <main+0x84>)
 800093c:	603b      	str	r3, [r7, #0]
	Gpiobutton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 800093e:	2300      	movs	r3, #0
 8000940:	713b      	strb	r3, [r7, #4]
	Gpiobutton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_RT;
 8000942:	2305      	movs	r3, #5
 8000944:	717b      	strb	r3, [r7, #5]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000946:	2302      	movs	r3, #2
 8000948:	74bb      	strb	r3, [r7, #18]
	Gpiobutton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800094a:	2300      	movs	r3, #0
 800094c:	71fb      	strb	r3, [r7, #7]


	GPIO_PeriClockControl(GPIOA,ENABLE);
 800094e:	2101      	movs	r1, #1
 8000950:	4808      	ldr	r0, [pc, #32]	; (8000974 <main+0x84>)
 8000952:	f7ff fc49 	bl	80001e8 <GPIO_PeriClockControl>

	GPIO_Init(&Gpiobutton);
 8000956:	463b      	mov	r3, r7
 8000958:	4618      	mov	r0, r3
 800095a:	f7ff fd2d 	bl	80003b8 <GPIO_Init>

	GPIO_IRQPriorityConfig(IRQ_NO_EXTI0,NVIC_IRQ_PRI7);
 800095e:	2107      	movs	r1, #7
 8000960:	2006      	movs	r0, #6
 8000962:	f7ff ff65 	bl	8000830 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI0,ENABLE);
 8000966:	2101      	movs	r1, #1
 8000968:	2006      	movs	r0, #6
 800096a:	f7ff fedb 	bl	8000724 <GPIO_IRQInterruptConfig>
	while(1);
 800096e:	e7fe      	b.n	800096e <main+0x7e>
 8000970:	40020c00 	.word	0x40020c00
 8000974:	40020000 	.word	0x40020000

08000978 <EXTI0_IRQHandler>:

	return 0;
}
void EXTI0_IRQHandler(void)
{
 8000978:	b580      	push	{r7, lr}
 800097a:	af00      	add	r7, sp, #0
    delay(); //200ms . wait till button de-bouncing gets over
 800097c:	f7ff ffa2 	bl	80008c4 <delay>
	GPIO_IRQHandling(GPIO_PIN_NO_0); //clear the pending event from exti line
 8000980:	2000      	movs	r0, #0
 8000982:	f7ff ff7f 	bl	8000884 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);
 8000986:	210c      	movs	r1, #12
 8000988:	4802      	ldr	r0, [pc, #8]	; (8000994 <EXTI0_IRQHandler+0x1c>)
 800098a:	f7ff feb5 	bl	80006f8 <GPIO_ToggleOutputPin>
}
 800098e:	bf00      	nop
 8000990:	bd80      	pop	{r7, pc}
 8000992:	bf00      	nop
 8000994:	40020c00 	.word	0x40020c00

08000998 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000998:	480d      	ldr	r0, [pc, #52]	; (80009d0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800099a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800099c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80009a0:	480c      	ldr	r0, [pc, #48]	; (80009d4 <LoopForever+0x6>)
  ldr r1, =_edata
 80009a2:	490d      	ldr	r1, [pc, #52]	; (80009d8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80009a4:	4a0d      	ldr	r2, [pc, #52]	; (80009dc <LoopForever+0xe>)
  movs r3, #0
 80009a6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80009a8:	e002      	b.n	80009b0 <LoopCopyDataInit>

080009aa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80009aa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80009ac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80009ae:	3304      	adds	r3, #4

080009b0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80009b0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80009b2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80009b4:	d3f9      	bcc.n	80009aa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80009b6:	4a0a      	ldr	r2, [pc, #40]	; (80009e0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80009b8:	4c0a      	ldr	r4, [pc, #40]	; (80009e4 <LoopForever+0x16>)
  movs r3, #0
 80009ba:	2300      	movs	r3, #0
  b LoopFillZerobss
 80009bc:	e001      	b.n	80009c2 <LoopFillZerobss>

080009be <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80009be:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80009c0:	3204      	adds	r2, #4

080009c2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80009c2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80009c4:	d3fb      	bcc.n	80009be <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80009c6:	f000 f819 	bl	80009fc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80009ca:	f7ff ff91 	bl	80008f0 <main>

080009ce <LoopForever>:

LoopForever:
  b LoopForever
 80009ce:	e7fe      	b.n	80009ce <LoopForever>
  ldr   r0, =_estack
 80009d0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80009d4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80009d8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80009dc:	08000a64 	.word	0x08000a64
  ldr r2, =_sbss
 80009e0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80009e4:	2000001c 	.word	0x2000001c

080009e8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80009e8:	e7fe      	b.n	80009e8 <ADC_IRQHandler>

080009ea <memset>:
 80009ea:	4402      	add	r2, r0
 80009ec:	4603      	mov	r3, r0
 80009ee:	4293      	cmp	r3, r2
 80009f0:	d100      	bne.n	80009f4 <memset+0xa>
 80009f2:	4770      	bx	lr
 80009f4:	f803 1b01 	strb.w	r1, [r3], #1
 80009f8:	e7f9      	b.n	80009ee <memset+0x4>
	...

080009fc <__libc_init_array>:
 80009fc:	b570      	push	{r4, r5, r6, lr}
 80009fe:	4d0d      	ldr	r5, [pc, #52]	; (8000a34 <__libc_init_array+0x38>)
 8000a00:	4c0d      	ldr	r4, [pc, #52]	; (8000a38 <__libc_init_array+0x3c>)
 8000a02:	1b64      	subs	r4, r4, r5
 8000a04:	10a4      	asrs	r4, r4, #2
 8000a06:	2600      	movs	r6, #0
 8000a08:	42a6      	cmp	r6, r4
 8000a0a:	d109      	bne.n	8000a20 <__libc_init_array+0x24>
 8000a0c:	4d0b      	ldr	r5, [pc, #44]	; (8000a3c <__libc_init_array+0x40>)
 8000a0e:	4c0c      	ldr	r4, [pc, #48]	; (8000a40 <__libc_init_array+0x44>)
 8000a10:	f000 f818 	bl	8000a44 <_init>
 8000a14:	1b64      	subs	r4, r4, r5
 8000a16:	10a4      	asrs	r4, r4, #2
 8000a18:	2600      	movs	r6, #0
 8000a1a:	42a6      	cmp	r6, r4
 8000a1c:	d105      	bne.n	8000a2a <__libc_init_array+0x2e>
 8000a1e:	bd70      	pop	{r4, r5, r6, pc}
 8000a20:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a24:	4798      	blx	r3
 8000a26:	3601      	adds	r6, #1
 8000a28:	e7ee      	b.n	8000a08 <__libc_init_array+0xc>
 8000a2a:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a2e:	4798      	blx	r3
 8000a30:	3601      	adds	r6, #1
 8000a32:	e7f2      	b.n	8000a1a <__libc_init_array+0x1e>
 8000a34:	08000a5c 	.word	0x08000a5c
 8000a38:	08000a5c 	.word	0x08000a5c
 8000a3c:	08000a5c 	.word	0x08000a5c
 8000a40:	08000a60 	.word	0x08000a60

08000a44 <_init>:
 8000a44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a46:	bf00      	nop
 8000a48:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a4a:	bc08      	pop	{r3}
 8000a4c:	469e      	mov	lr, r3
 8000a4e:	4770      	bx	lr

08000a50 <_fini>:
 8000a50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a52:	bf00      	nop
 8000a54:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a56:	bc08      	pop	{r3}
 8000a58:	469e      	mov	lr, r3
 8000a5a:	4770      	bx	lr
